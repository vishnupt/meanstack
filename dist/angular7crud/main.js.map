{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/business.service.ts","webpack:///./src/app/gst-add/gst-add.component.css","webpack:///./src/app/gst-add/gst-add.component.html","webpack:///./src/app/gst-add/gst-add.component.ts","webpack:///./src/app/gst-edit/gst-edit.component.css","webpack:///./src/app/gst-edit/gst-edit.component.html","webpack:///./src/app/gst-edit/gst-edit.component.ts","webpack:///./src/app/gst-get/gst-get.component.css","webpack:///./src/app/gst-get/gst-get.component.html","webpack:///./src/app/gst-get/gst-get.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login-component/login-component.component.css","webpack:///./src/app/login-component/login-component.component.html","webpack:///./src/app/login-component/login-component.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/rating/material.module.ts","webpack:///./src/app/rating/rating.component.css","webpack:///./src/app/rating/rating.component.html","webpack:///./src/app/rating/rating.component.ts","webpack:///./src/app/registration-component/registration-component.component.css","webpack:///./src/app/registration-component/registration-component.component.html","webpack:///./src/app/registration-component/registration-component.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GstAddComponent } from './gst-add/gst-add.component';\nimport { GstEditComponent } from './gst-edit/gst-edit.component';\nimport { GstGetComponent } from './gst-get/gst-get.component';\nimport { LoginComponentComponent } from './login-component/login-component.component';\nimport { RegistrationComponentComponent } from './registration-component/registration-component.component';\nimport { RatingComponent } from './rating/rating.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {\n    path: 'hotels',\n    component: GstGetComponent\n  },\n  {\n    path: 'hotel/create',\n    component: GstAddComponent\n  },\n  {\n    path: 'hotel/edit/:id',\n    component: GstEditComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponentComponent\n  },\n  {\n    path: 'register',\n    component: RegistrationComponentComponent\n  },\n  {\n    path: 'hotel/rate',\n    component: RatingComponent\n  },\n  {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"h1{\\n    text-align:center;\\n}\\nh2{\\n    text-align: center;\\n}\\n.spacer {\\n    flex: 1 1 auto;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7Q0FDckI7QUFDRDtJQUNJLG1CQUFtQjtDQUN0QjtBQUNEO0lBQ0ksZUFBZTtHQUNoQiIsImZpbGUiOiIuLi9zcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG59XG5oMntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uc3BhY2VyIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgfSJdfQ== */\"","module.exports = \"<!-- <ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\n<body style=\\\"background-color:powderblue;\\\">\\n<h1 style=\\\"font-family:verdana;\\\"> Welcome to Azure Devops Demo!  </h1>\\n<h2 style=\\\"font-family:courier;\\\"> Build version number {{version.version}} </h2>\\n</body>\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"business/create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Create Business\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"business\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Business\\n        </a>\\n      </li> \\n    </ul>\\n  </div>\\n</nav>\\n<br /> -->\\n\\n<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n     <span><a href=\\\"/\\\">HOME</a></span>\\n     <span class=\\\"spacer\\\"></span>\\n     <a mat-button routerLink=\\\"register\\\">Register</a>\\n     <a mat-button routerLink=\\\"login\\\">Login</a>\\n     <a mat-button routerLink=\\\"hotels\\\">Hotels</a>\\n     <a mat-button routerLink=\\\"hotel/create\\\">Add Hotel</a>\\n     <a mat-button routerLink=\\\"hotel/rate\\\">Rate Hotel</a>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div> \"","import { Component, OnInit } from '@angular/core';\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport { BusinessService } from '../app/business.service';\n\nimport { NavigationCancel,\n        Event,\n        NavigationEnd,\n        NavigationError,\n        NavigationStart,\n        Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  \n\n  title = 'angular7crud';\n  version;\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router,private bs: BusinessService) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n\n  ngOnInit() {\n    this.bs\n      .getVersion()\n      .subscribe((data) => {\n        this.version = data;\n        console.log(this.version)\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\n\nimport { AppComponent } from './app.component';\nimport { GstAddComponent } from './gst-add/gst-add.component';\nimport { GstGetComponent } from './gst-get/gst-get.component';\nimport { GstEditComponent } from './gst-edit/gst-edit.component';\n\nimport { BusinessService } from './business.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RegistrationComponentComponent } from './registration-component/registration-component.component';\nimport { LoginComponentComponent } from './login-component/login-component.component';\n\nimport { MyMaterialModule } from  './material.module';\nimport { RatingComponent } from './rating/rating.component';\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {FileSelectDirective, FileUploader, FileDropDirective} from \"ng2-file-upload\";\nimport {CustomMaterialModule} from \"./rating/material.module\";\nimport {MatSelectModule, MatOptionModule} from '@angular/material';\nimport { HomeComponent } from './home/home.component';\n// import {FileSelectDirective, FileDropDirective } from 'ng2-file-upload/ng2-file-upload';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GstAddComponent,\n    GstGetComponent,\n    GstEditComponent,\n    RegistrationComponentComponent,\n    LoginComponentComponent,\n    RatingComponent,\n    FileSelectDirective,\n    // FileUploader,\n    FileDropDirective,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    SlimLoadingBarModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MyMaterialModule,\n    CustomMaterialModule,\n    RouterModule.forRoot([\n      {path: '', component: RatingComponent}\n    ]),\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatOptionModule\n  ],\n  providers: [ BusinessService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusinessService {\n\n  uri = 'http://localhost:4000/business';\n  versionuri = 'http://localhost:4000/getversion';\n\n  constructor(private http: HttpClient) { }\n\n  addBusiness(name, place, rating, image) {\n    const obj = {\n      name: name,\n      place: place,\n      rating: rating,\n      image: image\n    };\n    this.http.post(`${this.uri}/add`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n\n  getBusinesses() {\n    return this.http.get(`${this.uri}`);\n  }\n\n  getVersion() {\n    return this.http.get(`${this.versionuri}`);\n  }\n\n  editBusiness(id) {\n    return this\n            .http\n            .get(`${this.uri}/edit/${id}`);\n    }\n\n  updateBusiness(name, place, rating, id, total_ratings) {\n    const obj = {\n        name: name,\n        place: place,\n        rating: rating,\n        total_ratings: total_ratings\n      };\n    this\n      .http\n      .post(`${this.uri}/update/${id}`, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n deleteBusiness(id) {\n    return this\n              .http\n              .get(`${this.uri}/delete/${id}`);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2dzdC1hZGQvZ3N0LWFkZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Hotel Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n          Hotel Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Location </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"place\\\" #place />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['place'].invalid && (angForm.controls['place'].dirty || angForm.controls['place'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['place'].errors.required\\\">\\n          Location is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Rating </label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"rating\\\" #rating />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['rating'].invalid && (angForm.controls['rating'].dirty || angForm.controls['rating'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['rating'].errors.required\\\">\\n          Rating required.\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"angForm.controls['image'].invalid && (angForm.controls['business_name'].dirty || angForm.controls['business_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['business_name'].errors.required\\\">\\n            Location is required.\\n          </div>\\n        </div> -->\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Image </label>\\n          <input type=\\\"file\\\" class=\\\"form-control\\\" #image (change)=\\\"onFileChanged($event)\\\" />\\n        </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"addBusiness(name.value, place.value, rating.value)\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\" \\n        class=\\\"btn btn-primary\\\">Add Business</button>\\n      </div>\\n    </form>\\n    \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BusinessService } from '../business.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-gst-add',\n  templateUrl: './gst-add.component.html',\n  styleUrls: ['./gst-add.component.css']\n})\nexport class GstAddComponent implements OnInit {\n\n  angForm: FormGroup;\n  public file: any;\n  public base64image: any;\n  constructor(private fb: FormBuilder, private bs: BusinessService, private router: Router) {\n    this.file; \n    this.createForm();\n    this.base64image;\n    \n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      place: ['', Validators.required ],\n      rating: ['', Validators.required ]\n    });\n  }\n\n\n  onFileChanged(event: any) {\n    this.file = event.target.files;\n  }\n\n  addBusiness(name, place, rating) {\n     let me = this;\n     let imagefile = this.file[0]\n     let reader = new FileReader();\n     reader.readAsDataURL(imagefile);\n     reader.onload = function () {\n        me.base64image = reader.result;\n        me.bs.addBusiness(name, place, rating, me.base64image);\n     };\n    reader.onerror = function (error) {\n     console.log('Error: ', error);\n    };\n    location.reload()    \n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2dzdC1lZGl0L2dzdC1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Hotel Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name [(ngModel)] = \\\"business.name\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n          Hotel Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Place </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"place\\\" #place [(ngModel)] = \\\"business.place\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['place'].invalid && (angForm.controls['place'].dirty || angForm.controls['place'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['place'].errors.required\\\">\\n          Place is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Rating </label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"rating\\\" #rating [(ngModel)] = \\\"business.rating\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['rating'].invalid && (angForm.controls['rating'].dirty || angForm.controls['rating'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['rating'].errors.required\\\">\\n          Rating is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"updateBusiness(name.value, place.value, rating.value)\\\"\\n        [disabled]=\\\"angForm.invalid\\\" \\n        class=\\\"btn btn-primary\\\">Update Business</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BusinessService } from '../business.service';\n\n@Component({\n  selector: 'app-gst-edit',\n  templateUrl: './gst-edit.component.html',\n  styleUrls: ['./gst-edit.component.css']\n})\nexport class GstEditComponent implements OnInit {\n\n  angForm: FormGroup;\n  business: any = {};\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private bs: BusinessService,\n    private fb: FormBuilder) {\n      this.createForm();\n     }\n\n  createForm() {\n    this.angForm = this.fb.group({\n        name: ['', Validators.required ],\n        place: ['', Validators.required ],\n        rating: ['', Validators.required ]\n      });\n    }\n\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.bs.editBusiness(params['id']).subscribe(res => {\n        this.business = res;\n      });\n    });\n  }\n\n  updateBusiness(name, place, rating) {\n   this.route.params.subscribe(params => {\n      this.bs.updateBusiness(name, place, rating, params['id'], '');\n      // this.router.navigate(['business']);\n      location.reload()\n   });\n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2dzdC1nZXQvZ3N0LWdldC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n      <td>Hotel</td>\\n      <td>Location</td>\\n      <td>Rating</td>\\n      <td>Image</td>\\n      <td colspan=\\\"2\\\">Actions</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let business of businesses\\\">\\n          <td>{{ business.name }}</td>\\n          <td>{{ business.place }}</td>\\n          <td>{{ business.rating }}</td>\\n          <td><img src=\\\"{{business.image}}\\\" width=\\\"50px\\\" height=\\\"50px\\\"></td>\\n          <td><a [routerLink]=\\\"['edit', business._id]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>\\n          <td><a (click) = \\\"deleteBusiness(business._id)\\\" class=\\\"btn btn-danger\\\">Delete</a></td>\\n      </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport Business from '../Business';\nimport { BusinessService } from '../business.service';\n\n@Component({\n  selector: 'app-gst-get',\n  templateUrl: './gst-get.component.html',\n  styleUrls: ['./gst-get.component.css']\n})\nexport class GstGetComponent implements OnInit {\n\n  businesses: Business[];\n\n  constructor(private bs: BusinessService) { }\n\n  ngOnInit() {\n    this.bs.getBusinesses().subscribe((data: Business[]) => {\n        this.businesses = data;\n    });\n  }\n\n  deleteBusiness(id) {\n    this.bs.deleteBusiness(id).subscribe(res => {\n      console.log('Deleted');\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".my-form{\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n   \\n  .full-width {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvbG9naW4tY29tcG9uZW50L2xvZ2luLWNvbXBvbmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixZQUFZO0dBQ2I7O0VBRUQ7SUFDRSxZQUFZO0dBQ2IiLCJmaWxlIjoiLi4vc3JjL2FwcC9sb2dpbi1jb21wb25lbnQvbG9naW4tY29tcG9uZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktZm9ybXtcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgIFxuICAuZnVsbC13aWR0aCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH0iXX0= */\"","module.exports = \"<mat-toolbar>\\n  <span>LOGIN</span>\\n</mat-toolbar>\\n<mat-card class=\\\"my-card\\\">\\n   <mat-card-content>\\n      <form class=\\\"my-form\\\">\\n         <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>Email</mat-label>\\n            <input  matInput  placeholder=\\\"Email\\\" #email name=\\\"email\\\">\\n         </mat-form-field>\\n         <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>Password</mat-label>\\n            <input  matInput  placeholder=\\\"Password\\\" #password name=\\\"password\\\">\\n         </mat-form-field>\\n      </form>\\n   </mat-card-content>\\n   <mat-card-actions>\\n      <button mat-raised-button (click)=\\\"login(email.value, password.value)\\\" color=\\\"primary\\\">LOGIN</button>\\n   </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\nexport class LoginComponentComponent implements OnInit {\n\n  constructor(private bs: UserService) {\n  }\n\n  ngOnInit() {\n  }\n\n  login(email, password){\n    this.bs.loginUser(email, password);\n  }\n\n}\n","import { NgModule } from  '@angular/core';\nimport {MatNativeDateModule,MatIconModule,MatButtonModule, \n    MatCheckboxModule, MatToolbarModule, MatCardModule,MatFormFieldModule, \n    MatInputModule,MatRadioModule,MatListModule,ErrorStateMatcher,ShowOnDirtyErrorStateMatcher} from  '@angular/material';\nimport {MatDatepickerModule} from  '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n \n@NgModule({\nimports: [MatNativeDateModule,MatDatepickerModule,MatIconModule,MatButtonModule,MatCheckboxModule, MatToolbarModule,FormsModule, MatCardModule,MatFormFieldModule,MatInputModule,MatListModule,MatRadioModule,],\n \nexports: [MatNativeDateModule,FormsModule,\nMatDatepickerModule,MatIconModule,MatButtonModule,MatCheckboxModule, MatToolbarModule, MatCardModule,MatFormFieldModule,MatInputModule,MatListModule,MatRadioModule,],\nproviders: [\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher}\n  ] \n})\n \nexport  class  MyMaterialModule { }","import { NgModule } from  '@angular/core';\nimport {MatNativeDateModule,MatIconModule,MatButtonModule, \n    MatCheckboxModule, MatToolbarModule, MatCardModule,MatFormFieldModule, \n    MatInputModule,MatRadioModule,MatListModule,ErrorStateMatcher,ShowOnDirtyErrorStateMatcher} from  '@angular/material';\nimport {MatDatepickerModule} from  '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n \n@NgModule({\nimports: [MatNativeDateModule,MatDatepickerModule,MatIconModule,MatButtonModule,MatCheckboxModule, MatToolbarModule,FormsModule, MatCardModule,MatFormFieldModule,MatInputModule,MatListModule,MatRadioModule,],\n \nexports: [MatNativeDateModule,FormsModule,\nMatDatepickerModule,MatIconModule,MatButtonModule,MatCheckboxModule, MatToolbarModule, MatCardModule,MatFormFieldModule,MatInputModule,MatListModule,MatRadioModule,],\nproviders: [\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher}\n  ] \n})\n \nexport  class  CustomMaterialModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9zcmMvYXBwL3JhdGluZy9yYXRpbmcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card>\\n      <form [formGroup]=\\\"uploadForm\\\" (ngSubmit)=\\\"uploadSubmit()\\\">\\n        <mat-card-content>\\n          <div class=\\\"form-field\\\">\\n            <mat-label>Select Hotel</mat-label>\\n            <select formControlName=\\\"type\\\" #name (change)=\\\"currentRating($event.target.value)\\\" required>\\n              <option *ngFor=\\\"let business of businesses\\\" value=\\\"{{business.name}}\\\" >{{business.name}}</option>\\n            </select>\\n            \\n          </div>\\n          <br>\\n          <mat-label *ngIf=\\\"current_rating\\\">Current Rating: {{current_rating}}</mat-label>\\n          <br>\\n          <br>\\n          <mat-label>Add Your Rating: </mat-label>\\n          <div class=\\\"form-field\\\">\\n            <input type=\\\"number\\\" #rating max=\\\"5\\\" min=\\\"0\\\">\\n          </div>\\n          <br>\\n          \\n          <mat-label>Add Images: </mat-label>\\n          <input formControlName=\\\"document\\\" type=\\\"file\\\" ng2FileSelect accept=\\\".png\\\" [uploader]=\\\"uploader\\\" multiple/><br/>\\n          <br>\\n          <div class=\\\"drop-zone\\\">\\n          <div ng2FileDrop [uploader]=\\\"uploader\\\" class=\\\"drop-zone\\\">\\n             Drag and drop Images to upload {{options}}\\n          </div>\\n          </div>\\n          <br>\\n          <table>\\n            <thead>\\n            <tr>\\n              <th width=\\\"40%\\\">\\n                File Name\\n              </th>\\n              <th width=\\\"25%\\\">\\n                File Size\\n              </th>\\n              <th width=\\\"10%\\\"></th>\\n              <th width=\\\"25%\\\">\\n                Remove\\n              </th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n              <th width=\\\"40%\\\">\\n                {{item._file.name}}\\n              </th>\\n              <th width=\\\"25%\\\">{{item._file.size}}</th>\\n              <th width=\\\"10%\\\"></th>\\n              <th class=\\\"text-center\\\" width=\\\"25%\\\">\\n                <mat-icon (click)=\\\"item.remove()\\\">delete</mat-icon>\\n              </th>\\n            </tr>\\n            </tbody>\\n          </table>\\n          <br>\\n          <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!uploadForm.valid\\\" (click)=\\\"updateBusiness(name.value, place, rating.value, id, total_ratings)\\\">Upload Data</button>\\n        </mat-card-content>\\n      </form>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {FileUploader} from \"ng2-file-upload\";\nimport {Observable} from \"rxjs\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {HttpClient} from \"@angular/common/http\";\nimport { BusinessService } from '../business.service';\nimport Business from '../Business';\n\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\n\n\nexport class RatingComponent implements OnInit {\n\n  businesses: Business[];\n  uploadForm: FormGroup;\n  current_rating;\n  total_ratings;\n  place;\n  id;\n  public uploader:FileUploader = new FileUploader({\n    isHTML5: true\n  });\n  files;\n  title: string = 'Angular File Upload';\n  business: any = {};\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private bs: BusinessService, \n    private route: ActivatedRoute,\n    private router: Router,) { }\n  \n\n  uploadSubmit(){\n        for (let i = 0; i < this.uploader.queue.length; i++) {\n          let fileItem = this.uploader.queue[i]._file;\n          if(fileItem.size > 10000000){\n            alert(\"Each File should be less than 10 MB of size.\");\n            return;\n          }\n        }\n        for (let j = 0; j < this.uploader.queue.length; j++) {\n          let data = new FormData();\n          let fileItem = this.uploader.queue[j]._file;\n          data.append('file', fileItem);\n          data.append('fileSeq', 'seq'+j);\n          data.append( 'dataType', this.uploadForm.controls.type.value);\n          // this.uploadFile(data).subscribe(data => alert(data.message));\n        }\n        this.uploader.clearQueue();\n  }\n\n  currentRating(value){\n    for(let i=0;i<this.businesses.length; i++){\n      if(value==this.businesses[i].name){\n        this.current_rating = this.businesses[i].rating;\n        this.total_ratings = this.businesses[i].total_ratings;\n        this.place = this.businesses[i].place;\n        this.id = this.businesses[i]._id;\n      }\n    }    \n  }\n\n  ngOnInit() {\n    this.uploadForm = this.fb.group({\n      document: [null, null],\n      type:  [null, Validators.compose([Validators.required])]\n    });\n    this.route.params.subscribe(params => {\n      this.bs.getBusinesses().subscribe((data: Business[]) => {\n        this.businesses = data;\n    });\n    });\n  }\n\n  updateBusiness(name, place, rating, id, total_ratings) {\n    console.log(name, place, rating, id, total_ratings)\n    for(let i=0;i<this.businesses.length; i++){\n      if(name==this.businesses[i].name){\n        id = this.businesses[i]._id;\n        place = this.businesses[i].place;\n      }\n    } \n    this.route.params.subscribe(params => {\n       this.bs.updateBusiness(name, place, rating, id, total_ratings);\n       // this.router.navigate(['business']);\n       location.reload()\n    });\n  }\n}","module.exports = \".my-form{\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n   \\n  .full-width {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAvcmVnaXN0cmF0aW9uLWNvbXBvbmVudC9yZWdpc3RyYXRpb24tY29tcG9uZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLFlBQVk7R0FDYjs7RUFFRDtJQUNFLFlBQVk7R0FDYiIsImZpbGUiOiIuLi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi1jb21wb25lbnQvcmVnaXN0cmF0aW9uLWNvbXBvbmVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15LWZvcm17XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gICBcbiAgLmZ1bGwtd2lkdGgge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9Il19 */\"","module.exports = \"<mat-toolbar>\\n  <span>REGISTRATION</span>\\n</mat-toolbar>\\n<mat-card-content>\\n  <form class=\\\"my-form\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n          <mat-label>User Name</mat-label>\\n          <input  matInput  placeholder=\\\"User name\\\" #user_name  name=\\\"uname\\\"  required>\\n       </mat-form-field>\\n     <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>First Name</mat-label>\\n            <input  matInput  placeholder=\\\"First name\\\" #first_name  name=\\\"fname\\\"  required>\\n         </mat-form-field>\\n         <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>Last Name</mat-label>\\n            <input  matInput  placeholder=\\\"Last Name\\\" #last_name name=\\\"lname\\\"  required>\\n         </mat-form-field>\\n         \\n         <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>Email</mat-label>\\n            <input  matInput type=\\\"email\\\"  placeholder=\\\"Email\\\" #email name=\\\"email\\\" required>\\n         </mat-form-field>\\n         <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>Password</mat-label>\\n            <input  matInput type=\\\"password\\\"  placeholder=\\\"Password\\\" #password  name=\\\"password\\\" required>\\n         </mat-form-field>\\n         <section class=\\\"example-section\\\">\\n          <label class=\\\"example-margin\\\">Gender:</label>\\n          <mat-radio-group [(ngModel)]=\\\"gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\n            <mat-radio-button class=\\\"example-margin\\\" value=\\\"Male\\\">Male</mat-radio-button>\\n            <mat-radio-button class=\\\"example-margin\\\" value=\\\"Female\\\">Female</mat-radio-button>\\n            <mat-radio-button class=\\\"example-margin\\\" value=\\\"Other\\\">Other</mat-radio-button>\\n          </mat-radio-group>\\n        </section>\\n     \\n        <mat-form-field>\\n          <mat-label>Date of Birth</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" #dob placeholder=\\\"Choose a date\\\" required>\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n  </form>\\n</mat-card-content>\\n<mat-card-actions>\\n  <button mat-raised-button (click)=\\\"register(user_name.value, first_name.value, last_name.value, email.value, password.value, gender, dob.value)\\\" color=\\\"primary\\\">REGISTER</button>\\n</mat-card-actions>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-registration-component',\n  templateUrl: './registration-component.component.html',\n  styleUrls: ['./registration-component.component.css']\n})\nexport class RegistrationComponentComponent implements OnInit {\n\n  regForm: FormGroup;\n  constructor(private bs: UserService) {\n   }\n\n  ngOnInit() {\n  }\n\n  register(username, first_name, last_name, email, password, gender, dob){\n    this.bs.addUser(username, first_name, last_name, email, password, gender, dob);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  uri = 'http://localhost:4000/user';\n  versionuri = 'http://localhost:4000/getversion';\n\n  constructor(private http: HttpClient) { }\n\n  addUser(username, first_name, last_name, email, password, gender, dob) {\n    const obj = {\n      username: username,\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      password: password,\n      gender: gender,\n      dob: dob\n    };\n    this.http.post(`${this.uri}/add`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n\n  loginUser(email, password) {\n    const obj = { \n      email: email,\n      password: password,\n    };\n    this.http.post(`${this.uri}/add`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n\n  getBusinesses() {\n    return this.http.get(`${this.uri}`);\n  }\n\n  getVersion() {\n    return this.http.get(`${this.versionuri}`);\n  }\n\n  editBusiness(id) {\n    return this\n            .http\n            .get(`${this.uri}/edit/${id}`);\n    }\n\n  updateBusiness(person_name, business_name, business_gst_number, id) {\n\n    const obj = {\n        person_name: person_name,\n        business_name: business_name,\n        business_gst_number: business_gst_number\n      };\n    this\n      .http\n      .post(`${this.uri}/update/${id}`, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n deleteBusiness(id) {\n    return this\n              .http\n              .get(`${this.uri}/delete/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}